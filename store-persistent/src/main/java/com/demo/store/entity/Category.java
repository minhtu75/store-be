package com.demo.store.entity;
// Generated Feb 7, 2018 1:34:34 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "store")
public class Category implements java.io.Serializable {

	private static final long serialVersionUID = -4935596204735588189L;
	private Integer id;
	private String name;
	private String url;
	private String externalId;
	private String description;
	private String longDescription;
	private Date activeStartDate;
	private Date activeEndDate;
	private Date createDate;
	private Date updateDate;
	private Set<CategoryXref> categoryXrefs = new HashSet<CategoryXref>(0);
	private Set<CategoryProductXref> categoryProductXrefs = new HashSet<CategoryProductXref>(0);

	public Category() {
	}

	public Category(String name, String url, String externalId, String description, String longDescription,
			Date activeStartDate, Date activeEndDate, Date createDate, Date updateDate, Set<CategoryXref> categoryXrefs,
			Set<CategoryProductXref> categoryProductXrefs) {
		this.name = name;
		this.url = url;
		this.externalId = externalId;
		this.description = description;
		this.longDescription = longDescription;
		this.activeStartDate = activeStartDate;
		this.activeEndDate = activeEndDate;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.categoryXrefs = categoryXrefs;
		this.categoryProductXrefs = categoryProductXrefs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "url", length = 65535)
	@Type(type = "text")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "external_id", length = 200)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@Column(name = "description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "long_description", length = 65535)
	@Type(type = "text")
	public String getLongDescription() {
		return this.longDescription;
	}

	public void setLongDescription(String longDescription) {
		this.longDescription = longDescription;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "active_start_date", length = 19)
	public Date getActiveStartDate() {
		return this.activeStartDate;
	}

	public void setActiveStartDate(Date activeStartDate) {
		this.activeStartDate = activeStartDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "active_end_date", length = 19)
	public Date getActiveEndDate() {
		return this.activeEndDate;
	}

	public void setActiveEndDate(Date activeEndDate) {
		this.activeEndDate = activeEndDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<CategoryXref> getCategoryXrefs() {
		return this.categoryXrefs;
	}

	public void setCategoryXrefs(Set<CategoryXref> categoryXrefs) {
		this.categoryXrefs = categoryXrefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<CategoryProductXref> getCategoryProductXrefs() {
		return this.categoryProductXrefs;
	}

	public void setCategoryProductXrefs(Set<CategoryProductXref> categoryProductXrefs) {
		this.categoryProductXrefs = categoryProductXrefs;
	}

}
